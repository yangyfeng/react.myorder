{"version":3,"sources":["components/OrderItem/index.js","components/OrderList/index.js","components/Header/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["OrderItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleStarClick","stars","setState","handleSubmitComment","id","data","state","comment","editing","onSubmit","handleCancleClick","star","e","target","value","react_default","a","createElement","className","onChange","handleCommentChange","bind","renderStars","onClick","_this2","map","item","index","light","key","_this$props$data","shop","price","product","picture","ifCommented","src","alt","handleClickComment","renderEditArea","Component","OrderList","handleOnSubmit","newData","objectSpread","fetch","then","res","ok","json","_this3","components_OrderItem","Header","App","components_Header","components_OrderList","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1e4986e0.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './style.css'\nclass OrderItem extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            editing: false,\n            star: 0,\n            comment: props.data.comment || ''\n        }\n    }\n    handleClickComment() {\n        this.setState({editing: true})\n    }\n    handleStarClick = (stars) => {\n        this.setState({stars: stars})\n    }\n    handleSubmitComment = () => {\n        let id = this.props.data.id;\n        let stars = this.state.stars;\n        let comment = this.state.comment;\n        this.setState({editing: false})\n        this\n            .props\n            .onSubmit(id, stars, comment)\n    }\n    handleCancleClick = () => {\n        this.setState({\n            comment: this.props.data.comment || '',\n            editing: false,\n            stars: this.props.data.stars || 0\n        })\n    }\n\n    handleCommentChange(e) {\n        this.setState({comment: e.target.value})\n    }\n    renderEditArea() {\n        return (\n            <div className=\"orderItem_commentContainer\">\n                <textarea\n                    className=\"orderItem_comment\"\n                    onChange={this\n                    .handleCommentChange\n                    .bind(this)}\n                    value={this.state.comment}></textarea>\n                {this.renderStars()}\n                <button\n                    className=\"orderItem_btn orderItem_btn--red\"\n                    onClick={this\n                    .handleSubmitComment\n                    .bind(this)}>提交</button>\n                <button\n                    className=\"orderItem_btn orderItem_btn--gray\"\n                    onClick={this.handleCancleClick}>取消</button>\n            </div>\n        )\n    }\n    renderStars() {\n        const {stars} = this.state;\n        return (\n            <div>\n                {[1, 2, 3, 4, 5].map((item, index) => {\n                    const light = stars >= item\n                        ? \"orderItem_star--light\"\n                        : \"orderItem_star\"\n                    return <span\n                        key={index}\n                        className={light}\n                        onClick={this\n                        .handleStarClick\n                        .bind(this, item)}>★</span>\n                })\n}\n            </div>\n        )\n    }\n    render() {\n        const {shop, price, product, picture, ifCommented} = this.props.data;\n        return (\n            <div className=\"orderItem\">\n                <div className=\"orderItem_picContainer\">\n                    <img className=\"orderItem_pic\" src={picture} alt={product}/>\n                </div>\n                <div className=\"orderItem_content\">\n                    <div className=\"orderItem_product\">{product}</div>\n                    <div className=\"orderItem_shop\">{shop}</div>\n                    <div className=\"orderItem_detail\">\n                        <div className=\"orderItem_price\">{price}</div>\n                        {!ifCommented\n                            ? (\n                                <div>\n                                    <button\n                                        className=\"orderItem_btn orderItem_btn--red\"\n                                        onClick={this\n                                        .handleClickComment\n                                        .bind(this)}>评价</button>\n                                </div>\n                            )\n                            : (\n                                <div>\n                                    <button className=\"orderItem_btn orderItem_btn--gray\">已评价</button>\n                                </div>\n                            )\n}\n                    </div>\n                </div>\n                {this.state.editing\n                    ? this.renderEditArea()\n                    : null}\n            </div>\n        );\n    }\n}\n\nexport default OrderItem;","import React, {Component} from 'react';\nimport OrderItem from './../OrderItem'\nclass OrderList extends Component {\n    constructor(props) {\n        super()\n        this.state = {\n            data: []\n        }\n    }\n    handleOnSubmit = (id, stars, comment) => {\n        const newData = this\n            .state\n            .data\n            .map((item, index) => {\n                return item.id === id\n                    ? {\n                        ...item,\n                        stars,\n                        comment,\n                        ifCommented: true\n                    }\n                    : item\n            })\n        this.setState({data: newData})\n    }\n\n    componentDidMount() {\n        fetch('./mock/orders.json').then(res => {\n            if (res.ok) {\n                res\n                    .json()\n                    .then(data => {\n                        this.setState({data: data})\n                    })\n            }\n        })\n    }\n    render() {\n        let {data} = this.state\n        return (\n            <div className=\"orderList\">\n                {data.map((item, index) => {\n                    return <OrderItem data={item} key={item.id} onSubmit={this.handleOnSubmit}></OrderItem>\n                })}\n\n            </div>\n        );\n    }\n}\n\nexport default OrderList;","import React, {Component} from 'react';\nimport './style.css'\n\nclass Header extends Component {\n    render() {\n        return (\n            <header className=\"myOrder\">\n                我的订单\n            </header>\n        );\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport OrderList from './../OrderList'\nimport Header from './../Header'\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Header></Header>\n                <OrderList></OrderList>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}